version: "3.7"

services:
  backend:
    restart: always
    build:
      context: ./app
      dockerfile: Dockerfile
    entrypoint: [ "sh", "-c", "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn --bind 0.0.0.0:8000 app.wsgi:application" ]
    depends_on:
      - postgres_db
      - redis_db
    environment:
      SECRET_KEY: $SECRET_KEY
      DATABASE_NAME: app
      DATABASE_USER: user
      DATABASE_PASS: Go8zdaMCT3x7Ia7P
      DATABASE_HOST: postgres_db
      redis_host: redis_db
      redis_port: 6379
      STATIC_FOLDER_NAME: static
      MEDIA_FOLDER_NAME: media
      BUCKET_NAME_PREFIX: $BUCKET_NAME_PREFIX
      BUCKET_NAME_DELIMITER: $BUCKET_NAME_DELIMITER
      BRANCH: $branch
      S3_ACCESS_KEY: $S3_ACCESS_KEY
      S3_SECRET_ACCESS_KEY: $S3_SECRET_ACCESS_KEY
      S3_ENDPOINT_URL: $S3_ENDPOINT_URL
      ROLLBAR_ACCESS_TOKEN: $ROLLBAR_ACCESS_TOKEN
      USE_S3: $USE_S3
      S3_USE_SSL: $S3_USE_SSL
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      USE_STATIC_ROOT: "True"
    ports:
      - "$port_backend:8000"


  postgres_db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: Go8zdaMCT3x7Ia7P
      POSTGRES_DB: app
    ports:
      - "$port_postgres:5432"
    volumes:
      - $base_psql_data_path$branch:/var/lib/postgresql/data

  redis_db:
    image: redis:7-alpine
    restart: always
    ports:
      - "$port_redis:6379"


